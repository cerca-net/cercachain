// This file contains service classes that encapsulate business logic for the user service. 

import { Injectable } from '@nestjs/common';
import { User } from '../entities/user.entity';
import { CreateUserDto } from '../dtos/create-user.dto';
import { UpdateUserDto } from '../dtos/update-user.dto';

@Injectable()
export class UserService {
    private users: User[] = [];

    createUser(createUserDto: CreateUserDto): User {
        const newUser = { id: this.generateId(), ...createUserDto };
        this.users.push(newUser);
        return newUser;
    }

    findAllUsers(): User[] {
        return this.users;
    }

    findUserById(id: string): User | undefined {
        return this.users.find(user => user.id === id);
    }

    updateUser(id: string, updateUserDto: UpdateUserDto): User | undefined {
        const userIndex = this.users.findIndex(user => user.id === id);
        if (userIndex > -1) {
            this.users[userIndex] = { ...this.users[userIndex], ...updateUserDto };
            return this.users[userIndex];
        }
        return undefined;
    }

    deleteUser(id: string): boolean {
        const userIndex = this.users.findIndex(user => user.id === id);
        if (userIndex > -1) {
            this.users.splice(userIndex, 1);
            return true;
        }
        return false;
    }

    private generateId(): string {
        return Math.random().toString(36).substring(2, 15);
    }
}